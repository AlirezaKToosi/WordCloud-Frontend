{"ast":null,"code":"var _jsxFileName = \"C:\\\\Drive D\\\\Alireza\\\\Back end course\\\\project 7\\\\WordCloud-Frontend\\\\src\\\\WordCloud.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport cloud from 'd3-cloud'; // Import 'cloud' from 'd3-cloud'\nimport * as d3 from 'd3';\nimport 'd3-cloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WordCloud extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wordCloudData: null\n    };\n  }\n  componentDidMount() {\n    this.fetchWordCloudData();\n  }\n  fetchWordCloudData() {\n    // Make an API request to your backend to get word cloud data\n    axios.post('/api/wordcloud/generate', {\n      rssFeedUrl: 'https://example.com/rss',\n      // Provide a valid RSS feed URL\n      wordFrequencyThreshold: 5 // Adjust the threshold as needed\n    }).then(response => {\n      this.setState({\n        wordCloudData: response.data.wordFrequencies\n      });\n      this.createWordCloud();\n    }).catch(error => {\n      console.error('Error fetching word cloud data:', error);\n    });\n  }\n  createWordCloud() {\n    const wordFrequencies = this.state.wordCloudData;\n\n    // Create a word cloud layout using d3-cloud\n    const layout = d3.layout.cloud().size([500, 500]) // Adjust the size as needed\n    .words(Object.keys(wordFrequencies).map(word => ({\n      text: word,\n      size: wordFrequencies[word]\n    }))).padding(5).rotate(0).fontSize(d => d.size).on('end', this.draw);\n    layout.start();\n  }\n  draw(words) {\n    // Create a word cloud visualization using D3.js\n    const svg = d3.select('#word-cloud').append('svg').attr('width', 500) // Adjust the width as needed\n    .attr('height', 500) // Adjust the height as needed\n    .append('g').attr('transform', 'translate(250,250)');\n    svg.selectAll('text').data(words).enter().append('text').style('font-size', d => `${d.size}px`).style('fill', (d, i) => d3.schemeCategory10[i % 10]).attr('text-anchor', 'middle').attr('transform', d => `translate(${d.x},${d.y})`).text(d => d.text);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"word-cloud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default WordCloud;","map":{"version":3,"names":["React","Component","axios","cloud","d3","jsxDEV","_jsxDEV","WordCloud","constructor","props","state","wordCloudData","componentDidMount","fetchWordCloudData","post","rssFeedUrl","wordFrequencyThreshold","then","response","setState","data","wordFrequencies","createWordCloud","catch","error","console","layout","size","words","Object","keys","map","word","text","padding","rotate","fontSize","d","on","draw","start","svg","select","append","attr","selectAll","enter","style","i","schemeCategory10","x","y","render","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Drive D/Alireza/Back end course/project 7/WordCloud-Frontend/src/WordCloud.js"],"sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport cloud from 'd3-cloud'; // Import 'cloud' from 'd3-cloud'\r\nimport * as d3 from 'd3';\r\nimport 'd3-cloud';\r\n\r\nclass WordCloud extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wordCloudData: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchWordCloudData();\r\n    }\r\n\r\n    fetchWordCloudData() {\r\n        // Make an API request to your backend to get word cloud data\r\n        axios.post('/api/wordcloud/generate', {\r\n            rssFeedUrl: 'https://example.com/rss', // Provide a valid RSS feed URL\r\n            wordFrequencyThreshold: 5, // Adjust the threshold as needed\r\n        })\r\n        .then((response) => {\r\n            this.setState({ wordCloudData: response.data.wordFrequencies });\r\n            this.createWordCloud();\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error fetching word cloud data:', error);\r\n        });\r\n    }\r\n\r\n    createWordCloud() {\r\n        const wordFrequencies = this.state.wordCloudData;\r\n\r\n        // Create a word cloud layout using d3-cloud\r\n        const layout = d3.layout.cloud()\r\n            .size([500, 500]) // Adjust the size as needed\r\n            .words(Object.keys(wordFrequencies).map(word => ({ text: word, size: wordFrequencies[word] })))\r\n            .padding(5)\r\n            .rotate(0)\r\n            .fontSize(d => d.size)\r\n            .on('end', this.draw);\r\n\r\n        layout.start();\r\n    }\r\n\r\n    draw(words) {\r\n        // Create a word cloud visualization using D3.js\r\n        const svg = d3.select('#word-cloud').append('svg')\r\n            .attr('width', 500) // Adjust the width as needed\r\n            .attr('height', 500) // Adjust the height as needed\r\n            .append('g')\r\n            .attr('transform', 'translate(250,250)');\r\n\r\n        svg.selectAll('text')\r\n            .data(words)\r\n            .enter().append('text')\r\n            .style('font-size', d => `${d.size}px`)\r\n            .style('fill', (d, i) => d3.schemeCategory10[i % 10])\r\n            .attr('text-anchor', 'middle')\r\n            .attr('transform', d => `translate(${d.x},${d.y})`)\r\n            .text(d => d.text);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"word-cloud\"></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WordCloud;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}